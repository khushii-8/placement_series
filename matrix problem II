#include <bits/stdc++.h>
using namespace std;

//////////////////////////////////////////////////////
// 1️⃣ Finding Median in Row-wise Sorted Matrix
//////////////////////////////////////////////////////
int findMedian(vector<vector<int>> &mat) {
    int r = mat.size();
    int c = mat[0].size();

    int minVal = mat[0][0], maxVal = mat[0][c - 1];
    for (int i = 1; i < r; i++) {
        minVal = min(minVal, mat[i][0]);
        maxVal = max(maxVal, mat[i][c - 1]);
    }

    int desired = (r * c + 1) / 2;
    while (minVal < maxVal) {
        int mid = (minVal + maxVal) / 2;
        int count = 0;

        // count elements <= mid
        for (int i = 0; i < r; i++)
            count += upper_bound(mat[i].begin(), mat[i].end(), mid) - mat[i].begin();

        if (count < desired)
            minVal = mid + 1;
        else
            maxVal = mid;
    }
    return minVal;
}

//////////////////////////////////////////////////////
// 2️⃣ Identify Row with Maximum 1s
//////////////////////////////////////////////////////
int rowWithMax1s(vector<vector<int>> &mat) {
    int r = mat.size(), c = mat[0].size();
    int rowIndex = -1, j = c - 1;

    for (int i = 0; i < r; i++) {
        while (j >= 0 && mat[i][j] == 1) {
            rowIndex = i;
            j--;
        }
    }
    return rowIndex;
}

//////////////////////////////////////////////////////
// 3️⃣ Rotate Matrix by 90 Degrees Clockwise
//////////////////////////////////////////////////////
void rotate90(vector<vector<int>> &mat) {
    int n = mat.size();
    // Transpose
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++)
            swap(mat[i][j], mat[j][i]);
    }

    // Reverse each row
    for (int i = 0; i < n; i++)
        reverse(mat[i].begin(), mat[i].end());
}

void printMatrix(vector<vector<int>> &mat) {
    for (auto &row : mat) {
        for (int val : row)
            cout << val << " ";
        cout << endl;
    }
}

//////////////////////////////////////////////////////
// Main Function
//////////////////////////////////////////////////////
int main() {
    vector<vector<int>> mat1 = {
        {1, 3, 5},
        {2, 6, 9},
        {3, 6, 9}
    };

    cout << "Median of matrix: " << findMedian(mat1) << "\n\n";

    vector<vector<int>> mat2 = {
        {0, 0, 0, 1},
        {0, 1, 1, 1},
        {0, 0, 1, 1}
    };

    int row = rowWithMax1s(mat2);
    cout << "Row with maximum 1s: " << row << "\n\n";

    vector<vector<int>> mat3 = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    cout << "Original Matrix:\n";
    printMatrix(mat3);

    rotate90(mat3);
    cout << "\nMatrix after 90° rotation:\n";
    printMatrix(mat3);

    return 0;
}
