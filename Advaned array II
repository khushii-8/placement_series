#include <bits/stdc++.h>
using namespace std;

// 1️⃣ Container With Most Water
int maxArea(vector<int>& height) {
    int left = 0, right = height.size() - 1;
    int maxWater = 0;

    while (left < right) {
        int h = min(height[left], height[right]);
        int w = right - left;
        maxWater = max(maxWater, h * w);

        // Move the smaller line inward
        if (height[left] < height[right])
            left++;
        else
            right--;
    }
    return maxWater;
}

// 2️⃣ Merge Two Sorted Arrays
void mergeArrays(vector<int>& nums1, int m, vector<int>& nums2, int n) {
    int i = m - 1, j = n - 1, k = m + n - 1;

    while (i >= 0 && j >= 0) {
        if (nums1[i] > nums2[j])
            nums1[k--] = nums1[i--];
        else
            nums1[k--] = nums2[j--];
    }

    while (j >= 0)
        nums1[k--] = nums2[j--];
}

// 3️⃣ Trapping Rain Water
int trap(vector<int>& height) {
    int n = height.size();
    if (n == 0) return 0;

    vector<int> leftMax(n), rightMax(n);
    leftMax[0] = height[0];
    for (int i = 1; i < n; i++)
        leftMax[i] = max(leftMax[i - 1], height[i]);

    rightMax[n - 1] = height[n - 1];
    for (int i = n - 2; i >= 0; i--)
        rightMax[i] = max(rightMax[i + 1], height[i]);

    int water = 0;
    for (int i = 0; i < n; i++)
        water += min(leftMax[i], rightMax[i]) - height[i];

    return water;
}

int main() {
    // 1️⃣ Container With Most Water
    vector<int> height = {1,8,6,2,5,4,8,3,7};
    cout << "Max Area (Container With Most Water): " << maxArea(height) << endl;

    // 2️⃣ Merge Two Sorted Arrays
    vector<int> nums1 = {1,2,3,0,0,0};
    vector<int> nums2 = {2,5,6};
    mergeArrays(nums1, 3, nums2, 3);
    cout << "Merged Sorted Array: ";
    for (int x : nums1) cout << x << " ";
    cout << endl;

    // 3️⃣ Trapping Rain Water
    vector<int> rain = {0,1,0,2,1,0,1,3,2,1,2,1};
    cout << "Trapped Rain Water: " << trap(rain) << endl;

    return 0;
}
