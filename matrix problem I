#include <bits/stdc++.h>
using namespace std;

// 1️⃣ Spiral Traversal of a Matrix
void spiralTraversal(vector<vector<int>> &mat) {
    int top = 0, bottom = mat.size() - 1;
    int left = 0, right = mat[0].size() - 1;

    cout << "Spiral Traversal: ";
    while (top <= bottom && left <= right) {
        // Left → Right
        for (int i = left; i <= right; i++)
            cout << mat[top][i] << " ";
        top++;

        // Top → Bottom
        for (int i = top; i <= bottom; i++)
            cout << mat[i][right] << " ";
        right--;

        // Right → Left
        if (top <= bottom) {
            for (int i = right; i >= left; i--)
                cout << mat[bottom][i] << " ";
            bottom--;
        }

        // Bottom → Top
        if (left <= right) {
            for (int i = bottom; i >= top; i--)
                cout << mat[i][left] << " ";
            left++;
        }
    }
    cout << endl;
}

// 2️⃣ Searching Element in a Sorted Matrix
// (Each row & column is sorted)
bool searchMatrix(vector<vector<int>> &mat, int target) {
    int n = mat.size(), m = mat[0].size();
    int row = 0, col = m - 1;

    while (row < n && col >= 0) {
        if (mat[row][col] == target)
            return true;
        else if (mat[row][col] > target)
            col--;
        else
            row++;
    }
    return false;
}

// 3️⃣ Print All Elements in Sorted Order
void printSortedElements(vector<vector<int>> &mat) {
    vector<int> all;
    for (auto &row : mat)
        for (int val : row)
            all.push_back(val);

    sort(all.begin(), all.end());

    cout << "Elements in sorted order: ";
    for (int val : all) cout << val << " ";
    cout << endl;
}

int main() {
    vector<vector<int>> mat = {
        {1, 4, 7},
        {2, 5, 8},
        {3, 6, 9}
    };

    return 0;
}
